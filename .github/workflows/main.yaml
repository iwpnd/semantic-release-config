name: main
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:
jobs:
  build-lint:
    env:
      CI: true
      HUSKY: 0
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
    - uses: actions/checkout@v4
    - name: setup node
      uses: actions/setup-node@v4
      with:
        node-version-file: .nvmrc
    - name: Enable Corepack
      run: corepack enable
    - name: yarn cache
      id: yarn-cache
      run: echo "dir=./yarn/cache" >> $GITHUB_OUTPUT
    - uses: actions/cache@v4
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: install
      run: yarn install --immutable
    - name: lint
      run: yarn lint
  release:
    needs: build-lint
    if: github.event_name == 'push'
    name: release
    runs-on: ubuntu-latest
    env:
      CI: true
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      HUSKY: 0
    steps:
    - name: checkout
      uses: actions/checkout@v4
    - name: setup node.js
      uses: actions/setup-node@v4
      with:
        node-version-file: .nvmrc
    - name: Enable Corepack
      run: corepack enable
    - name: yarn cache
      id: yarn-cache
      run: echo "dir=./yarn/cache" >> $GITHUB_OUTPUT
    - uses: actions/cache@v4
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: install dependencies
      run: yarn
    - name: release
      run: npx semantic-release
